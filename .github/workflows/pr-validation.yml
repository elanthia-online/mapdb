name: PR Validation

on:
  pull_request:
    branches:
      - main
    paths:
      - 'gs/rooms/**/*.json'
    types:
      - opened
      - edited
      - synchronize
      - reopened

permissions:
  contents: read
  pull-requests: write

jobs:
  validate-changed-rooms:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Get changed room files
        id: changed-files
        run: |
          # Get list of changed room.json files
          CHANGED_FILES=$(git diff --name-only origin/main...HEAD | grep 'gs/rooms/.*/room.json' | tr '\n' ' ')
          echo "files=$CHANGED_FILES" >> $GITHUB_OUTPUT
          echo "count=$(echo $CHANGED_FILES | wc -w)" >> $GITHUB_OUTPUT
          
          if [ -n "$CHANGED_FILES" ]; then
            echo "Changed room files:"
            echo "$CHANGED_FILES" | tr ' ' '\n'
          else
            echo "No room files changed"
          fi

      - name: Validate changed room files
        if: steps.changed-files.outputs.count > 0
        run: |
          echo "Validating ${{ steps.changed-files.outputs.count }} changed room files..."
          
          # Validate files using cartographer
          bunx @elanthia/cartographer validate-files --json ${{ steps.changed-files.outputs.files }} > validation-results.json
          
          # Check if validation passed
          if [ $? -eq 0 ]; then
            echo "‚úÖ All room files passed validation"
          else
            echo "‚ùå Validation failed"
            echo "Validation errors:"
            cat validation-results.json
            exit 1
          fi

      - name: Run full build and validation
        if: steps.changed-files.outputs.count > 0
        run: |
          echo "Running full mapdb build and validation..."
          
          # Build mapdb.json from all room files
          bun run build
          
          # Validate the complete mapdb.json
          bun run validate
          
          echo "‚úÖ Full build and validation completed successfully"

      - name: Comment validation results
        if: always() && steps.changed-files.outputs.count > 0
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let comment = '## Room Validation Results\n\n';
            
            const changedCount = ${{ steps.changed-files.outputs.count }};
            comment += `üìÅ **Files Changed**: ${changedCount} room files\n\n`;
            
            // Check if validation results file exists
            try {
              const results = JSON.parse(fs.readFileSync('validation-results.json', 'utf8'));
              
              if (results.errors && results.errors.length > 0) {
                comment += '‚ùå **Validation Status**: FAILED\n\n';
                comment += '### Validation Errors\n\n';
                results.errors.forEach(error => {
                  comment += `**File**: \`${error.file}\`\n`;
                  if (error.id) comment += `**Room ID**: ${error.id}\n`;
                  if (error.title) comment += `**Title**: ${error.title}\n`;
                  comment += `**Error**: ${error.error}\n\n`;
                });
              } else {
                comment += '‚úÖ **Validation Status**: PASSED\n\n';
                comment += `All ${results.validFiles} changed room files are valid.\n\n`;
              }
            } catch (e) {
              comment += '‚úÖ **Validation Status**: PASSED\n\n';
              comment += 'All room files passed validation.\n\n';
            }
            
            comment += '---\n*Validation performed by [@elanthia/cartographer](https://github.com/elanthia-online/cartographer)*';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Skip validation
        if: steps.changed-files.outputs.count == 0
        run: |
          echo "‚ÑπÔ∏è No room files changed in this PR - skipping validation"