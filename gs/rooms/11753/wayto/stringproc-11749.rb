; ticket_nouns = ['scrip', 'scroll', 'document', 'parchment', 'paper', 'note']; check_ticket = proc { |test_id|; look_result = dothistimeout "look ##{test_id}", 3, /reads, ".*#{checkname}|^You see nothing unusual\.|^It takes you a moment to focus|[0-9]+ silver/; /reads, ".*#{checkname}/.match?(look_result) ? test_id : nil; }; ticket_id = ticket_nouns.include?(GameObj.right_hand.noun) ? check_ticket.call(GameObj.right_hand.id) : nil; ticket_id ? if ticket_nouns.include?(GameObj.left_hand.noun); if ticket_id = check_ticket.call(GameObj.left_hand.id); fput 'swap'; end; end : nil; unless ticket_id
empty_hands; checked_containers = []; GameObj.inv.each { |container|; unless container.contents.nil? || container.contents.empty?
 checked_containers.push(container.id); container.contents.each { |item|; if ticket_nouns.include?(item.noun); break if ticket_id = check_ticket.call(item.id); end; }; end; break if ticket_id; }; ticket_id ? fput("get ##{ticket_id}") : nil; end; unless ticket_id
                                                                                                                                                                                                                                                                                                                                                                                           status_tags; inv_result = dothis 'inventory containers', /^You are wearing/; status_tags; container_list = inv_result.scan(/exist="([0-9]+)"/).flatten; (container_list - checked_containers).each { |container_id|; container = GameObj.inv.find { |obj| obj.id == container_id }; next unless container; open_result = dothis "open ##{container.id}", /^You open|^That is already open\.$/; open_result == 'That is already open.' ? fput("look in ##{container.id}") : nil; container.contents.each { |item|; ticket_nouns.include?(item.noun) ? break if ticket_id = check_ticket.call(item.id) : nil; }; if ticket_id
 fput "get ##{ticket_id}"; if /^You open/.match?(open_result); fput "close ##{container.id}"; end; break; else; if /^You open/.match?(open_result); fput "close ##{container.id}"; end; end; }; end; unless ticket_id
echo 'failed to find your ticket'; if $go2_get_silvers.nil?
 echo 'update go2 for automatic ticket buying'; exit; elsif $go2_get_silvers; echo 'going to buy one...'; sleep 3; move 'north'; move 'east'; move 'north'; move 'northwest'; move 'west'; move 'west'; move 'go storefront'; fput 'unhide' if hidden? || checkspell(916); ask_result = dothis 'ask jyhm about ticket', /^Jyhm whispers, "Look -- I need [0-9]+ coins for something like that\.|^Jyhm quietly takes your money/; if ask_result =~ /^Jyhm whispers, "Look -- I need ([0-9]+) coins for something like that\./; cost = $1; move 'out'; move 'east'; move 'east'; move 'southeast'; move 'south'; move 'east'; move 'go bridge'; move 'up'; move 'southeast'; move 'southeast'; move 'down'; move 'southeast'; move 'east'; move 'south'; move 'south'; move 'east'; move 'go doors'; fput 'unhide' if hidden? || checkspell(916); withdraw_result = dothis "withdraw #{cost} silvers", /hands you [0-9]+ silvers|don't seem to have that much/; unless /hands you [0-9]+ silvers/.match?(withdraw_result); echo "you are too poor to go to River's Rest"; exit; end; move 'out'; move 'west'; move 'north'; move 'north'; move 'west'; move 'northwest'; move 'up'; move 'northwest'; move 'northwest'; move 'down'; move 'northwest'; move 'west'; move 'north'; move 'northwest'; move 'west'; move 'west'; move 'go storefront'; fput 'unhide' if hidden? || checkspell(916); dothis 'ask jyhm about ticket', /^Jyhm quietly takes your money/; end; move 'out'; move 'east'; move 'east'; move 'southeast'; move 'south'; move 'west'; move 'go pier'; else; echo 'for automatic ticket buying, use ;go2 getsilvers=on'; exit; end; end; fput 'unhide' if (hidden? || checkspell(916)) && checkloot.include?('gangplank'); unless checkloot.include?('gangplank') && move('go gangplank')
echo 'waiting for the cutter...'; line = get until line =~ /The crew swiftly extends a gangplank\.|^You hear a voice on the cutter shouting, "Are the passengers all aboard\?"/; fput 'unhide' if hidden? || checkspell(916); move 'go gangplank'; end
